#include <bits/stdc++.h>
#define endl '\n'

using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef priority_queue<ii, vector<ii>, greater<ii>> pqg;
#define mp make_pair
#define fst first
#define snd second
#define all(x) begin(x), end(x)
#define sor(x) sort(all(x)) 
#define pb push_back
#define pf push_front
#define eb emplace_back

int ok2321 = 0;
const int mx = 3e5 + 5;

int primes[mx];

bool ip(int n){
    for(int i = 2; i < sqrt(n); i++){
        if(n%i==0) return false;
    }
    return true;
}

ll mod = 998244353;

void solve(){
    int n,m; cin >> n >> m;
    vector<ll> ppr(n+1);
    ppr[1] = 1; 
    for(int i = 2; i <=n; i++){
        if(primes[i]) ppr[i] = ppr[i-1] * i;
        else ppr[i] = ppr[i-1];
        cout << "i: " << i << ' ' << ppr[i] << endl;
    }
    vector<ll> ans(n+1);
    ans[1] = m;
    ll all = 0;
    ll aa = m;
    for(int i = 2; i <= n; i++){
        all += aa%mod;
        aa = ((aa%mod) * i)%mod;
    }
    cout << all << endl;
    for(int i = 2; i <= n; i++){
        ans[i] = ans[i-1]%mod + (ans[i-1]%mod) * ((m/ppr[i])%mod);
    }
    cout << all - ans[n] << endl;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
    for(int i = 2; i < mx; i++){
        primes[i] = 1;
    }
    primes[1] = 0;
    for(int i = 2; i < mx; i++){
        if(!primes[i])continue;
        if(ip(i)){
            primes[i] = 1;
            for(int d = i+i; d < mx; d++){
                primes[d] = 0;
            }
        }
    }
    int tc=1;
	if(ok2321) cin >> tc;
    while(tc--) solve();
	return 0;
}



